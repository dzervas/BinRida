{%- from "_macros.j2" import argparse_str -%}

{%- for func in targets -%}
const {{ func.name }}_module = Process.getModuleByName("{{ func.view.file.original_filename.split("/") | last }}").base;
const {{ func.name }}_ptr = new NativePointer({{ func.name }}_module.add({{ "%#x" % (func.start - bv.start) }}));

Interceptor.attach({{ func.name }}_ptr, {
	onEnter: function(args) {
		send(`{{ func.name }}(
			{%- for param in func.type.parameters -%}
				{%- set index = loop.index0 | string -%}
				{{- argparse_str(param, "args[" + index + "]") -}},
			{%- endfor -%})`);

		{%- if "brida_prehook" in func.comment %}
		{{ func.comment.split("brida_prehook:")[1].split("\n")[0].strip() }}
		{%- endif -%}
	},
	onLeave: function(retval) {
		{%- if "brida_return" in func.comment -%}
		{%- set new_retval = func.comment.split("brida_return:")[1].split("\n")[0].strip() -%}
		{%- endif -%}
		send(`<- {{ func.name }}() {%- if func.can_return %} = ${retval} {%- endif %}{% if "brida_return" in func.comment %} ~> {{ new_retval }}{% endif %}`);

		{%- if "brida_posthook" in func.comment %}
		{{ func.comment.split("brida_posthook:")[1].split("\n")[0].strip() }}
		{% endif -%}
		{%- if "brida_return" in func.comment %}
		retval.replace({{ new_retval }})
		{%- endif -%}
	}
});
{% endfor %}

{%- from "_macros.j2" import argparse -%}

{%- for func in targets -%}
// {{ "%#x" % func.start }}: {{ func.type.return_value.__str__() }} {{ func.name }}({{ func.type.parameters | join(", ") }})
const {{ func.name }}_module = Process.getModuleByName("{{ func.view.file.original_filename.split("/") | last }}").base;
const {{ func.name }}_ptr = ptr({{ func.name }}_module.add({{ "%#x" % (func.start - bv.start) }}));

Interceptor.attach({{ func.name }}_ptr, {
	onEnter: function(args) {
		send(`{{ func.name }}@{{ "%#x" % func.start }}(
			{%- for param in func.type.parameters -%}
				{%- set index = loop.index0 | string -%}
				{{ param.name }}: ${ {{- argparse(param, "args[" + index + "]") -}} },
			{%- endfor -%})`);

		{%- if "frinja_prehook" in func.comment %}
		{% for param in func.type.parameters %}
			{%- set index = loop.index0 | string -%}
			const {{ param.name }} = {{- argparse(param, "args[" + index + "]") -}};
		{% endfor %}
		{{ func.comment.split("frinja_prehook:")[1].split("\n")[0].strip() }};
		{%- endif %}
	},
	onLeave: function(retval) {
		{%- if "frinja_return" in func.comment -%}
		{%- set new_retval = func.comment.split("frinja_return:")[1].split("\n")[0].strip() -%}
		{%- endif %}
		send(`<- {{ func.name }}@{{ "%#x" % func.start }}() {%- if func.can_return %} = ${ {{- argparse(func.type.return_value, "retval") -}} } {%- endif %}{% if "frinja_return" in func.comment %} ~> {{ new_retval }}{% endif %}`);

		{%- if "frinja_posthook" in func.comment %}
		{{ func.comment.split("frinja_posthook:")[1].split("\n")[0].strip() }}
		{% endif -%}
		{%- if "frinja_return" in func.comment %}
		retval.replace({{ new_retval }})
		{%- endif %}
	}
});
{% endfor %}
